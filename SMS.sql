-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.course_registration
(
    id serial NOT NULL,
    student_id integer,
    course_id integer,
    CONSTRAINT course_registration_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.courses
(
    id serial NOT NULL,
    code character varying(10) COLLATE pg_catalog."default",
    name character varying(30) COLLATE pg_catalog."default",
    major_id integer,
    CONSTRAINT courses_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.departments
(
    id serial NOT NULL,
    name character varying(30) COLLATE pg_catalog."default",
    description text COLLATE pg_catalog."default",
    address character varying(30) COLLATE pg_catalog."default",
    CONSTRAINT departments_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.employee_types
(
    id integer NOT NULL DEFAULT nextval('services_id_seq'::regclass),
    name character varying(20) COLLATE pg_catalog."default",
    address character varying(30) COLLATE pg_catalog."default",
    CONSTRAINT services_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.employees
(
    id integer NOT NULL DEFAULT nextval('employees_employee_id_seq'::regclass),
    name character varying(30) COLLATE pg_catalog."default" NOT NULL,
    salary bigint,
    phone character varying(15) COLLATE pg_catalog."default",
    age character varying(3) COLLATE pg_catalog."default",
    gender character varying(7) COLLATE pg_catalog."default",
    type_id integer,
    email character varying(20) COLLATE pg_catalog."default",
    CONSTRAINT employees_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.majors
(
    id serial NOT NULL,
    name character varying(30) COLLATE pg_catalog."default",
    code character varying(10) COLLATE pg_catalog."default" NOT NULL,
    department_id integer,
    CONSTRAINT majors_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.students
(
    id integer NOT NULL DEFAULT nextval('students_student_id_seq'::regclass),
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    phone character varying(20) COLLATE pg_catalog."default",
    email character varying(100) COLLATE pg_catalog."default",
    age character varying(3) COLLATE pg_catalog."default",
    gender character varying(7) COLLATE pg_catalog."default",
    department_id integer,
    CONSTRAINT students_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.teachers
(
    id integer NOT NULL DEFAULT nextval('teachers_teacher_id_seq'::regclass),
    name character varying(50) COLLATE pg_catalog."default",
    course character varying(20) COLLATE pg_catalog."default",
    salary bigint,
    email character varying(20) COLLATE pg_catalog."default",
    age character varying(3) COLLATE pg_catalog."default",
    gender character varying(7) COLLATE pg_catalog."default",
    department_id integer,
    phone character varying(20) COLLATE pg_catalog."default",
    CONSTRAINT teachers_pkey PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS public.course_registration
    ADD CONSTRAINT course_registration_course_id_fkey FOREIGN KEY (course_id)
    REFERENCES public.courses (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.course_registration
    ADD CONSTRAINT course_registration_student_id_fkey FOREIGN KEY (student_id)
    REFERENCES public.students (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.courses
    ADD CONSTRAINT courses_major_id_fkey FOREIGN KEY (major_id)
    REFERENCES public.majors (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.employees
    ADD CONSTRAINT type_id FOREIGN KEY (type_id)
    REFERENCES public.employee_types (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.majors
    ADD CONSTRAINT majors_department_id_fkey FOREIGN KEY (department_id)
    REFERENCES public.departments (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.students
    ADD CONSTRAINT fk_department_id FOREIGN KEY (department_id)
    REFERENCES public.departments (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.teachers
    ADD CONSTRAINT department_id FOREIGN KEY (department_id)
    REFERENCES public.departments (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;